generator client {
  provider = "prisma-client"
  output   = "../src/generated/prisma"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
}

model user {
  userId    String     @id @default(uuid()) @map("user_id") @db.Uuid
  name      String     @db.VarChar(100)
  email     String     @unique @db.VarChar(255)
  password  String     @db.VarChar(255)
  createdAt DateTime   @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime   @default(now()) @map("updated_at") @db.Timestamptz(6)
  todoList  todoList[]
}

model todoList {
  todoListId String   @id @default(uuid()) @map("todo_list_id") @db.Uuid
  title      String   @db.VarChar(200)
  userId     String   @map("user_id") @db.Uuid
  createdAt  DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt  DateTime @default(now()) @map("updated_at") @db.Timestamptz(6)

  user user   @relation(fields: [userId], references: [userId], onDelete: Cascade)
  todo todo[]

  @@index([userId], name: "idx_todo_list_user_id")
}

model todo {
  todoId     String   @id @default(uuid()) @map("todo_id") @db.Uuid
  content    String   @db.VarChar(500)
  completed  Boolean  @default(false) @map("is_completed")
  todoListId String   @map("todo_list_id") @db.Uuid
  createdAt  DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt  DateTime @default(now()) @map("updated_at") @db.Timestamptz(6)

  todoList todoList @relation(fields: [todoListId], references: [todoListId], onDelete: Cascade)

  @@index([todoListId], name: "idx_todo_todo_list_id")
}
